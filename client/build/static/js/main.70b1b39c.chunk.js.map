{"version":3,"sources":["actions/types.js","components/reducers/alert.js","components/reducers/auth.js","components/reducers/profile.js","components/reducers/post.js","components/reducers/index.js","components/utils/setAuthToken.js","store.js","components/utils/api.js","actions/alert.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/layout/Alert.js","components/dashboard/DashboardActions.js","actions/profile.js","components/utils/formatDate.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/Dashboard.js","components/profile-forms/ProfileForm.js","components/profile-forms/AddExperience.js","components/profile-forms/AddEducation.js","components/layout/Spinner.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/ProfileGithub.js","components/profile/Profile.js","components/posts/PostItem.js","actions/post.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","components/layout/NotFound.js","components/routing/PrivateRoute.js","components/routing/Routes.js","App.js","index.js"],"names":["SET_ALERT","REMOVE_ALERT","REGISTER_SUCCESS","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGOUT","GET_PROFILE","GET_PROFILES","GET_REPOS","NO_REPOS","UPDATE_PROFILE","CLEAR_PROFILE","PROFILE_ERROR","ACCOUNT_DELETED","GET_POSTS","GET_POST","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","ADD_COMMENT","REMOVE_COMMENT","initialState","alertReducer","state","action","type","payload","filter","alert","id","token","localStorage","getItem","isAuthenticated","loading","user","authReducer","profile","profiles","repos","error","profileReducer","posts","post","postReducer","_id","map","likes","comments","comment","combineReducers","auth","setAuthToken","api","defaults","headers","common","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","currentState","getState","subscribe","previousState","axios","create","baseURL","interceptors","response","use","res","err","status","dispatch","Promise","reject","setAlert","msg","alertType","timeout","uuidv4","setTimeout","loadUser","a","get","data","connect","logout","authLinks","to","className","onClick","href","guestLinks","register","formData","errors","forEach","useState","name","email","password","password2","setFormData","onChange","e","target","value","onSubmit","preventDefault","placeholder","login","body","required","minLength","alerts","DashboardActions","getCurrentProfile","statusText","formatDate","date","Intl","DateTimeFormat","format","Date","deleteExperience","delete","experience","experiences","exp","company","title","from","deleteEducation","education","educations","edu","school","degree","deleteAccount","window","confirm","useEffect","website","location","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","createProfile","history","edit","push","displaySocialInputs","toggleSocialInputs","profileData","key","social","Array","isArray","join","addExperience","put","current","description","checked","disabled","cols","rows","addEducation","fieldofstudy","Spinner","style","width","margin","display","alt","ProfileItem","avatar","src","slice","skill","index","getProfiles","length","ProfileTop","rel","Object","entries","ProfileAbout","trim","split","ProfileExperience","ProfileEducation","getGithubRepos","username","repo","html_url","stargazers_count","watchers_count","forks_count","getProfileById","userId","match","params","PostItem","addLike","removeLike","deletePost","text","showActions","defaultProps","addPost","setText","getPosts","addComment","postId","deleteComment","commentId","getPost","NotFound","Component","component","rest","render","props","Routes","exact","path","Register","Login","Profiles","Profile","Dashboard","ProfileForm","AddExperience","AddEducation","Posts","Post","App","addEventListener","Landing","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.70b1b39c.chunk.js","sourcesContent":["export const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const GET_PROFILE = 'GET_PROFILE';\r\nexport const GET_PROFILES = 'GET_PROFILES';\r\nexport const GET_REPOS = 'GET_REPOS';\r\nexport const NO_REPOS = 'NO_REPOS';\r\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\r\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\r\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\r\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED';\r\nexport const GET_POSTS = 'GET_POSTS';\r\nexport const GET_POST = 'GET_POST';\r\nexport const POST_ERROR = 'POST_ERROR';\r\nexport const UPDATE_LIKES = 'UPDATE_LIKES';\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport const ADD_POST = 'ADD_POST';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';\r\n","import { SET_ALERT, REMOVE_ALERT } from '../../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nfunction alertReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default alertReducer;","import {\r\n    REGISTER_SUCCESS,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGOUT,\r\n    ACCOUNT_DELETED\r\n  } from '../../actions/types';\r\n  \r\n  const initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null\r\n  };\r\n  \r\n  function authReducer(state = initialState, action) {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n      case USER_LOADED:\r\n        return {\r\n          ...state,\r\n          isAuthenticated: true,\r\n          loading: false,\r\n          user: payload\r\n        };\r\n      case REGISTER_SUCCESS:\r\n      case LOGIN_SUCCESS:\r\n        return {\r\n          ...state,\r\n          ...payload,\r\n          isAuthenticated: true,\r\n          loading: false\r\n        };\r\n      case ACCOUNT_DELETED:\r\n        return {\r\n          ...state,\r\n          token: null,\r\n          isAuthenticated: false,\r\n          loading: false,\r\n          user: null\r\n        };\r\n      case AUTH_ERROR:\r\n      case LOGOUT:\r\n        return {\r\n          ...state,\r\n          token: null,\r\n          isAuthenticated: false,\r\n          loading: false,\r\n          user: null\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  \r\n  export default authReducer;\r\n  ","import {\r\n    GET_PROFILE,\r\n    PROFILE_ERROR,\r\n    CLEAR_PROFILE,\r\n    UPDATE_PROFILE,\r\n    GET_PROFILES,\r\n    GET_REPOS,\r\n    NO_REPOS\r\n  } from '../../actions/types';\r\n  \r\n  const initialState = {\r\n    profile: null,\r\n    profiles: [],\r\n    repos: [],\r\n    loading: true,\r\n    error: {}\r\n  };\r\n  \r\n  function profileReducer(state = initialState, action) {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n      case GET_PROFILE:\r\n      case UPDATE_PROFILE:\r\n        return {\r\n          ...state,\r\n          profile: payload,\r\n          loading: false\r\n        };\r\n      case GET_PROFILES:\r\n        return {\r\n          ...state,\r\n          profiles: payload,\r\n          loading: false\r\n        };\r\n      case PROFILE_ERROR:\r\n        return {\r\n          ...state,\r\n          error: payload,\r\n          loading: false,\r\n          profile: null\r\n        };\r\n      case CLEAR_PROFILE:\r\n        return {\r\n          ...state,\r\n          profile: null,\r\n          repos: []\r\n        };\r\n      case GET_REPOS:\r\n        return {\r\n          ...state,\r\n          repos: payload,\r\n          loading: false\r\n        };\r\n      case NO_REPOS:\r\n        return {\r\n          ...state,\r\n          repos: []\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  \r\n  export default profileReducer;\r\n  ","import {\r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    UPDATE_LIKES,\r\n    DELETE_POST,\r\n    ADD_POST,\r\n    GET_POST,\r\n    ADD_COMMENT,\r\n    REMOVE_COMMENT\r\n  } from '../../actions/types';\r\n  \r\n  const initialState = {\r\n    posts: [],\r\n    post: null,\r\n    loading: true,\r\n    error: {}\r\n  };\r\n  \r\n  function postReducer(state = initialState, action) {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n      case GET_POSTS:\r\n        return {\r\n          ...state,\r\n          posts: payload,\r\n          loading: false\r\n        };\r\n      case GET_POST:\r\n        return {\r\n          ...state,\r\n          post: payload,\r\n          loading: false\r\n        };\r\n      case ADD_POST:\r\n        return {\r\n          ...state,\r\n          posts: [payload, ...state.posts],\r\n          loading: false\r\n        };\r\n      case DELETE_POST:\r\n        return {\r\n          ...state,\r\n          posts: state.posts.filter((post) => post._id !== payload),\r\n          loading: false\r\n        };\r\n      case POST_ERROR:\r\n        return {\r\n          ...state,\r\n          error: payload,\r\n          loading: false\r\n        };\r\n      case UPDATE_LIKES:\r\n        return {\r\n          ...state,\r\n          posts: state.posts.map((post) =>\r\n            post._id === payload.id ? { ...post, likes: payload.likes } : post\r\n          ),\r\n          loading: false\r\n        };\r\n      case ADD_COMMENT:\r\n        return {\r\n          ...state,\r\n          post: { ...state.post, comments: payload },\r\n          loading: false\r\n        };\r\n      case REMOVE_COMMENT:\r\n        return {\r\n          ...state,\r\n          post: {\r\n            ...state.post,\r\n            comments: state.post.comments.filter(\r\n              (comment) => comment._id !== payload\r\n            )\r\n          },\r\n          loading: false\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  \r\n  export default postReducer;\r\n  ","import { combineReducers } from 'redux';\r\nimport alert from './alert';\r\nimport auth from './auth';\r\nimport profile from './profile';\r\nimport post from './post';\r\n\r\nexport default combineReducers({\r\n  alert,\r\n  auth,\r\n  profile,\r\n  post\r\n});","import api from './api';\r\n\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    api.defaults.headers.common['x-auth-token'] = token;\r\n    localStorage.setItem('token', token);\r\n  } else {\r\n    delete api.defaults.headers.common['x-auth-token'];\r\n    localStorage.removeItem('token');\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './components/reducers';\r\nimport setAuthToken from './components/utils/setAuthToken';\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\nlet currentState = store.getState();\r\nstore.subscribe(() => {\r\n    let previousState = currentState;\r\n  currentState = store.getState();\r\n    if (previousState.auth.token !== currentState.auth.token) {\r\n    const token = currentState.auth.token;\r\n    setAuthToken(token);\r\n  }\r\n});\r\n\r\nexport default store;\r\n","import axios from 'axios';\r\nimport store from '../../store';\r\nimport { LOGOUT } from '../../actions/types';\r\n\r\nconst api = axios.create({\r\n  baseURL: '/api',\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\napi.interceptors.response.use(\r\n  res => res,\r\n  err => {\r\n    if (err.response.status === 401) {\r\n      store.dispatch({ type: LOGOUT });\r\n    }\r\n    return Promise.reject(err);\r\n  }\r\n);\r\n\r\nexport default api;\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport { SET_ALERT, REMOVE_ALERT } from './types';\r\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\r\n  const id = uuidv4();\r\n  dispatch({\r\n    type: SET_ALERT,\r\n    payload: { msg, alertType, id }\r\n  });\r\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\r\n};\r\n","import api from '../components/utils/api';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT\r\n} from './types';\r\nexport const loadUser = () => async dispatch => {\r\n  try {\r\n    const res = await api.get('/auth');\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR\r\n    });\r\n  }\r\n};\r\nexport const register = formData => async dispatch => {\r\n  try {\r\n    const res = await api.post('/users', formData);\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data\r\n    });\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({\r\n      type: REGISTER_FAIL\r\n    });\r\n  }};\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n  const body = { email, password };\r\n\r\n  try {\r\n    const res = await api.post('/auth', body);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: LOGIN_FAIL\r\n    });\r\n  }\r\n};\r\nexport const logout = () => ({ type: LOGOUT });\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { logout } from '../../actions/auth';\r\n\r\nconst Navbar = ({ auth: { isAuthenticated }, logout }) => {\r\n  const authLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/profiles\">Developers</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/posts\">Posts</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/dashboard\">\r\n          <i className=\"fas fa-user\" />{' '}\r\n          <span className=\"hide-sm\">Dashboard</span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <a onClick={logout} href=\"#!\">\r\n          <i className=\"fas fa-sign-out-alt\" />{' '}\r\n          <span className=\"hide-sm\">Logout</span>\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  const guestLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/profiles\">Developers</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/register\">Register</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/login\">Login</Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  return (\r\n    <nav className=\"navbar bg-dark\">\r\n      <h1>\r\n        <Link to=\"/\">\r\n          <i className=\"fas fa-code\" /> DevConnector\r\n        </Link>\r\n      </h1>\r\n      <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar);\r\n","import React from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Landing = ({ isAuthenticated }) => {\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  return (\r\n    <section className='landing'>\r\n      <div className='dark-overlay'>\r\n        <div className='landing-inner'>\r\n          <h1 className='x-large'>Developer Connector</h1>\r\n          <p className='lead'>\r\n            Create a developer profile/portfolio, share posts and get help from\r\n            other developers</p>\r\n          <div className='buttons'>\r\n            <Link to='/register' className='btn btn-primary'>\r\n              Sign Up\r\n            </Link>\r\n            <Link to='/login' className='btn btn-light'>\r\n              Login\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nLanding.propTypes = {\r\n  isAuthenticated: PropTypes.bool\r\n};\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { setAlert } from '../../actions/alert';\r\nimport { register } from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Register = ({ setAlert, register, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    password2: ''\r\n  });\r\n\r\n  const { name, email, password, password2 } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (password !== password2) {\r\n      setAlert('Passwords do not match', 'danger');\r\n    } else {\r\n      register({ name, email, password });\r\n    }\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Sign Up</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\" /> Create Your Account\r\n      </p>\r\n      <form className=\"form\" onSubmit={onSubmit}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Name\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email Address\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={onChange}\r\n          />\r\n          <small className=\"form-text\">\r\n            This site uses Gravatar so if you want a profile image, use a\r\n            Gravatar email\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            name=\"password2\"\r\n            value={password2}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\r\n      </form>\r\n      <p className=\"my-1\">\r\n        Already have an account? <Link to=\"/login\">Sign In</Link>\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\nRegister.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\nexport default connect(mapStateToProps, { setAlert, register })(Register);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { login } from '../../actions/auth';\r\nconst Login = ({ login, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n  const { email, password } = formData;\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    login(email, password);\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Sign In</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\" /> Sign Into Your Account\r\n      </p>\r\n      <form className=\"form\" onSubmit={onSubmit}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email Address\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={onChange}\r\n            minLength=\"6\"\r\n          />\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\r\n      </form>\r\n      <p className=\"my-1\">\r\n        Don't have an account? <Link to=\"/register\">Sign Up</Link>\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool\r\n};\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Alert = ({ alerts }) =>\r\n  alerts.map((alert) => (\r\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n      {alert.msg}\r\n    </div>\r\n  ));\r\n\r\nAlert.propTypes = {\r\n  alerts: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  alerts: state.alert\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nconst DashboardActions = () => {\r\n  return (\r\n    <div className='dash-buttons'>\r\n      <Link to='/edit-profile' className='btn btn-light'>\r\n        <i className='fas fa-user-circle text-primary' /> Edit Profile\r\n      </Link>\r\n      <Link to='/add-experience' className='btn btn-light'>\r\n        <i className='fab fa-black-tie text-primary' /> Add Experience\r\n      </Link>\r\n      <Link to='/add-education' className='btn btn-light'>\r\n        <i className='fas fa-graduation-cap text-primary' /> Add Education\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardActions;\r\n","import api from '../components/utils/api';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  GET_PROFILE,\r\n  GET_PROFILES,\r\n  PROFILE_ERROR,\r\n  UPDATE_PROFILE,\r\n  CLEAR_PROFILE,\r\n  ACCOUNT_DELETED,\r\n  GET_REPOS,\r\n  NO_REPOS\r\n} from './types';\r\nexport const getCurrentProfile = () => async (dispatch) => {\r\n  try {\r\n    const res = await api.get('/profile/me');\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }};\r\nexport const getProfiles = () => async (dispatch) => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n\r\n  try {\r\n    const res = await api.get('/profile');\r\n\r\n    dispatch({\r\n      type: GET_PROFILES,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\nexport const getProfileById = (userId) => async (dispatch) => {\r\n  try {\r\n    const res = await api.get(`/profile/user/${userId}`);\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\nexport const getGithubRepos = (username) => async (dispatch) => {\r\n  try {\r\n    const res = await api.get(`/profile/github/${username}`);\r\n\r\n    dispatch({\r\n      type: GET_REPOS,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: NO_REPOS\r\n    });\r\n  }\r\n};\r\nexport const createProfile = (formData, history, edit = false) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const res = await api.post('/profile', formData);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\r\n\r\n    if (!edit) {\r\n      history.push('/dashboard');\r\n    }\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }};\r\nexport const addExperience = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const res = await api.put('/profile/experience', formData);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Experience Added', 'success'));\r\n\r\n    history.push('/dashboard');\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\nexport const addEducation = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const res = await api.put('/profile/education', formData);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Education Added', 'success'));\r\n\r\n    history.push('/dashboard');\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\nexport const deleteExperience = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await api.delete(`/profile/experience/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Experience Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\nexport const deleteEducation = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await api.delete(`/profile/education/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Education Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\nexport const deleteAccount = () => async (dispatch) => {\r\n  if (window.confirm('Are you sure? This can NOT be undone!')) {\r\n    try {\r\n      await api.delete('/profile');\r\n\r\n      dispatch({ type: CLEAR_PROFILE });\r\n      dispatch({ type: ACCOUNT_DELETED });\r\n\r\n      dispatch(setAlert('Your account has been permanently deleted'));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status }\r\n      });\r\n    }\r\n  }};\r\n","function formatDate(date) {\r\n    return new Intl.DateTimeFormat().format(new Date(date));\r\n  }\r\n  \r\n  export default formatDate;","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deleteExperience } from '../../actions/profile';\r\nimport formatDate from '../utils/formatDate';\r\n\r\nconst Experience = ({ experience, deleteExperience }) => {\r\n  const experiences = experience.map((exp) => (\r\n    <tr key={exp._id}>\r\n      <td>{exp.company}</td>\r\n      <td className=\"hide-sm\">{exp.title}</td>\r\n      <td>\r\n        {formatDate(exp.from)} - {exp.to ? formatDate(exp.to) : 'Now'}\r\n      </td>\r\n      <td>\r\n        <button\r\n          onClick={() => deleteExperience(exp._id)}\r\n          className=\"btn btn-danger\" > Delete </button></td> </tr>\r\n  ));\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2 className=\"my-2\">Experience Credentials</h2>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Company</th>\r\n            <th className=\"hide-sm\">Title</th>\r\n            <th className=\"hide-sm\">Years</th>\r\n            <th />\r\n          </tr>\r\n        </thead>\r\n        <tbody>{experiences}</tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nExperience.propTypes = {\r\n  experience: PropTypes.array.isRequired,\r\n  deleteExperience: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { deleteExperience })(Experience);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deleteEducation } from '../../actions/profile';\r\nimport formatDate from '../utils/formatDate';\r\n\r\nconst Education = ({ education, deleteEducation }) => {\r\n  const educations = education.map((edu) => (\r\n    <tr key={edu._id}>\r\n      <td>{edu.school}</td>\r\n      <td className=\"hide-sm\">{edu.degree}</td>\r\n      <td>\r\n        {formatDate(edu.from)} - {edu.to ? formatDate(edu.to) : 'Now'}\r\n      </td>\r\n      <td>\r\n        <button onClick={() => deleteEducation(edu._id)} className=\"btn btn-danger\" >\r\n          Delete</button> </td></tr>\r\n  ));\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2 className=\"my-2\">Education Credentials</h2>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>School</th>\r\n            <th className=\"hide-sm\">Degree</th>\r\n            <th className=\"hide-sm\">Years</th>\r\n            <th />\r\n          </tr>\r\n        </thead>\r\n        <tbody>{educations}</tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEducation.propTypes = {\r\n  education: PropTypes.array.isRequired,\r\n  deleteEducation: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { deleteEducation })(Education);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport DashboardActions from './DashboardActions';\r\nimport Experience from './Experience';\r\nimport Education from './Education';\r\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile';\r\n\r\nconst Dashboard = ({\r\n  getCurrentProfile,\r\n  deleteAccount,\r\n  auth: { user },\r\n  profile: { profile }\r\n}) => {useEffect(() => {getCurrentProfile();\r\n  }, [getCurrentProfile]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Dashboard</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\" /> Welcome {user && user.name} </p>\r\n      {profile !== null ? (\r\n        <Fragment>\r\n          <DashboardActions />\r\n          <Experience experience={profile.experience} />\r\n          <Education education={profile.education} />\r\n          <div className=\"my-2\">\r\n            <button className=\"btn btn-danger\" onClick={() => deleteAccount()}>\r\n              <i className=\"fas fa-user-minus\" /> Delete My Account  </button></div>\r\n        </Fragment>\r\n      ) : (\r\n        <Fragment>\r\n          <p>You have not yet setup a profile, please add some info</p>\r\n          <Link to=\"/create-profile\" className=\"btn btn-primary my-1\">\r\n            Create Profile </Link>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  deleteAccount: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(\r\n  Dashboard\r\n);\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\r\n\r\nconst initialState = {\r\n  company: '',\r\n  website: '',\r\n  location: '',\r\n  status: '',\r\n  skills: '',\r\n  githubusername: '',\r\n  bio: '',\r\n  twitter: '',\r\n  facebook: '',\r\n  linkedin: '',\r\n  youtube: '',\r\n  instagram: ''\r\n};\r\n\r\nconst ProfileForm = ({\r\n  profile: { profile, loading },\r\n  createProfile,\r\n  getCurrentProfile,\r\n  history\r\n}) => {\r\n  const [formData, setFormData] = useState(initialState);\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n  useEffect(() => {\r\n    if (!profile) getCurrentProfile();\r\n    if (!loading && profile) {\r\n      const profileData = { ...initialState };\r\n      for (const key in profile) {\r\n        if (key in profileData) profileData[key] = profile[key];\r\n      }\r\n      for (const key in profile.social) {\r\n        if (key in profileData) profileData[key] = profile.social[key];\r\n      }\r\n      if (Array.isArray(profileData.skills))\r\n        profileData.skills = profileData.skills.join(', ');\r\n      setFormData(profileData);\r\n    }\r\n  }, [loading, getCurrentProfile, profile]);\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram\r\n  } = formData;\r\n\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    createProfile(formData, history, profile ? true : false);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Edit Your Profile</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\" /> Add some changes to your profile\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className=\"form\" onSubmit={onSubmit}>\r\n        <div className=\"form-group\">\r\n          <select name=\"status\" value={status} onChange={onChange}>\r\n            <option>* Select Professional Status</option>\r\n            <option value=\"Developer\">Developer</option>\r\n            <option value=\"Junior Developer\">Junior Developer</option>\r\n            <option value=\"Senior Developer\">Senior Developer</option>\r\n            <option value=\"Manager\">Manager</option>\r\n            <option value=\"Student or Learning\">Student or Learning</option>\r\n            <option value=\"Instructor\">Instructor or Teacher</option>\r\n            <option value=\"Intern\">Intern</option>\r\n            <option value=\"Other\">Other</option>\r\n          </select>\r\n          <small className=\"form-text\">\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Company\"\r\n            name=\"company\"\r\n            value={company}\r\n            onChange={onChange}/>\r\n          <small className=\"form-text\">\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Website\"\r\n            name=\"website\"\r\n            value={website}\r\n            onChange={onChange}/>\r\n          <small className=\"form-text\">\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Location\"\r\n            name=\"location\"\r\n            value={location}\r\n            onChange={onChange} />\r\n          <small className=\"form-text\">\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Skills\"\r\n            name=\"skills\"\r\n            value={skills}\r\n            onChange={onChange} />\r\n          <small className=\"form-text\">\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Github Username\"\r\n            name=\"githubusername\"\r\n            value={githubusername}\r\n            onChange={onChange}\r\n />\r\n          <small className=\"form-text\">\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            placeholder=\"A short bio of yourself\"\r\n            name=\"bio\"\r\n            value={bio}\r\n            onChange={onChange}/>\r\n          <small className=\"form-text\">Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className=\"my-2\">\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type=\"button\"\r\n            className=\"btn btn-light\" >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-twitter fa-2x\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Twitter URL\"\r\n                name=\"twitter\"\r\n                value={twitter}\r\n                onChange={onChange} />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-facebook fa-2x\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Facebook URL\"\r\n                name=\"facebook\"\r\n                value={facebook}\r\n                onChange={onChange} />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-youtube fa-2x\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"YouTube URL\"\r\n                name=\"youtube\"\r\n                value={youtube}\r\n                onChange={onChange} />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-linkedin fa-2x\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Linkedin URL\"\r\n                name=\"linkedin\"\r\n                value={linkedin}\r\n                onChange={onChange}/>\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-instagram fa-2x\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Instagram URL\"\r\n                name=\"instagram\"\r\n                value={instagram}\r\n                onChange={onChange} />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfileForm.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\r\n  ProfileForm\r\n);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addExperience } from '../../actions/profile';\r\n\r\nconst AddExperience = ({ addExperience, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    title: '',\r\n    location: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: ''});\r\n\r\n  const { company, title, location, from, to, current, description } = formData;\r\n\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Add An Experience</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-code-branch\" /> Add any developer/programming\r\n        positions that you have had in the past\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form\r\n        className=\"form\"\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          addExperience(formData, history);\r\n        }}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Job Title\"\r\n            name=\"title\"\r\n            value={title}\r\n            onChange={onChange}\r\n            required />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Company\"\r\n            name=\"company\"\r\n            value={company}\r\n            onChange={onChange}\r\n            required />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Location\"\r\n            name=\"location\"\r\n            value={location}\r\n            onChange={onChange} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>From Date</h4>\r\n          <input type=\"date\" name=\"from\" value={from} onChange={onChange} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <p>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"current\"\r\n              checked={current}\r\n              value={current}\r\n              onChange={() => {\r\n                setFormData({ ...formData, current: !current });\r\n              }} />{' '}\r\n            Current Job\r\n          </p>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>To Date</h4>\r\n          <input\r\n            type=\"date\"\r\n            name=\"to\"\r\n            value={to}\r\n            onChange={onChange}\r\n            disabled={current}  />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            name=\"description\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder=\"Job Description\"\r\n            value={description}\r\n            onChange={onChange} />\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddExperience.propTypes = {\r\n  addExperience: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { addExperience })(AddExperience);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addEducation } from '../../actions/profile';\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    school: '',\r\n    degree: '',\r\n    fieldofstudy: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: ''\r\n  });\r\n\r\n  const {\r\n    school,\r\n    degree,\r\n    fieldofstudy,\r\n    from,\r\n    to,\r\n    description,\r\n    current\r\n  } = formData;\r\n\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Add Your Education</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-code-branch\" /> Add any school or bootcamp that you have attended\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form\r\n        className=\"form\"\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          addEducation(formData, history);\r\n        }} >\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* School or Bootcamp\"\r\n            name=\"school\"\r\n            value={school}\r\n            onChange={onChange}\r\n            required/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Degree or Certificate\"\r\n            name=\"degree\"\r\n            value={degree}\r\n            onChange={onChange}\r\n            required/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Field of Study\"\r\n            name=\"fieldofstudy\"\r\n            value={fieldofstudy}\r\n            onChange={onChange}   />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>From Date</h4>\r\n          <input type=\"date\" name=\"from\" value={from} onChange={onChange} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <p>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"current\"\r\n              checked={current}\r\n              value={current}\r\n              onChange={() => setFormData({ ...formData, current: !current })} />{' '}\r\n            Current School\r\n          </p>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>To Date</h4>\r\n          <input\r\n            type=\"date\"\r\n            name=\"to\"\r\n            value={to}\r\n            onChange={onChange}\r\n            disabled={current}/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            name=\"description\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder=\"Program Description\"\r\n            value={description}\r\n            onChange={onChange}/>\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddEducation.propTypes = {\r\n  addEducation: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { addEducation })(AddEducation);\r\n","import React, { Fragment } from 'react';\r\n//import spinner from './spinner.gif';\r\n\r\nconst Spinner = () => (\r\n  <Fragment>\r\n    <img\r\n      //src={spinner}\r\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n      alt=\"Loading...\"\r\n    />\r\n  </Fragment>\r\n);\r\nexport default Spinner;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileItem = ({\r\n  profile: {\r\n    user: { _id, name, avatar },\r\n    status,\r\n    company,\r\n    location,\r\n    skills\r\n  }\r\n}) => {\r\n  return (\r\n    <div className='profile bg-light'>\r\n      <img src={avatar} alt='' className='round-img' />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>\r\n          {status} {company && <span> at {company}</span>}\r\n        </p>\r\n        <p className='my-1'>{location && <span>{location}</span>}</p>\r\n        <Link to={`/profile/${_id}`} className='btn btn-primary'>\r\n          View Profile</Link>\r\n      </div>\r\n      <ul>\r\n        {skills.slice(0, 4).map((skill, index) => (\r\n          <li key={index} className='text-primary'>\r\n            <i className='fas fa-check' /> {skill}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileItem.propTypes = {\r\n  profile: PropTypes.object.isRequired\r\n};\r\nexport default ProfileItem;\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport ProfileItem from './ProfileItem';\r\nimport { getProfiles } from '../../actions/profile';\r\n\r\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\r\n  useEffect(() => {\r\n    getProfiles();\r\n  }, [getProfiles]);\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <h1 className='large text-primary'>Developers</h1>\r\n          <p className='lead'>\r\n            <i className='fab fa-connectdevelop' /> Browse and connect with\r\n            developers\r\n          </p>\r\n          <div className='profiles'>\r\n            {profiles.length > 0 ? (\r\n              profiles.map(profile => (\r\n                <ProfileItem key={profile._id} profile={profile} />\r\n              ))) : (\r\n              <h4>No profiles found...</h4>\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\nProfiles.propTypes = {\r\n  getProfiles: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProfiles }\r\n)(Profiles);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileTop = ({\r\n  profile: {\r\n    status,\r\n    company,\r\n    location,\r\n    website,\r\n    social,\r\n    user: { name, avatar }\r\n  }\r\n}) => {\r\n  return (\r\n    <div className=\"profile-top bg-primary p-2\">\r\n      <img className=\"round-img my-1\" src={avatar} alt=\"\" />\r\n      <h1 className=\"large\">{name}</h1>\r\n      <p className=\"lead\">\r\n        {status} {company ? <span> at {company}</span> : null}\r\n      </p>\r\n      <p>{location ? <span>{location}</span> : null}</p>\r\n      <div className=\"icons my-1\">\r\n        {website ? (\r\n          <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fas fa-globe fa-2x\" />\r\n          </a>) : null}\r\n        {social\r\n          ? Object.entries(social).filter(([_, value]) => value).map(([key, value]) => (\r\n                <a key={key}\r\n                  href={value}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\" >\r\n                  <i className={`fab fa-${key} fa-2x`}></i>\r\n                </a>\r\n              )) : null} </div> </div>\r\n  );\r\n};\r\n\r\nProfileTop.propTypes = {\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProfileTop;\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileAbout = ({\r\n  profile: {\r\n    bio,\r\n    skills,\r\n    user: { name }\r\n  }}) => (\r\n  <div className='profile-about bg-light p-2'>\r\n    {bio && (\r\n      <Fragment>\r\n        <h2 className='text-primary'>{name.trim().split(' ')[0]}s Bio</h2>\r\n        <p>{bio}</p>\r\n        <div className='line' />\r\n      </Fragment>\r\n    )}\r\n    <h2 className='text-primary'>Skill Set</h2>\r\n    <div className='skills'>\r\n      {skills.map((skill, index) => (\r\n        <div key={index} className='p-1'>\r\n          <i className='fas fa-check' /> {skill}\r\n        </div>\r\n      ))}\r\n    </div> </div>\r\n);\r\nProfileAbout.propTypes = {\r\n  profile: PropTypes.object.isRequired\r\n};\r\nexport default ProfileAbout;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport formatDate from '../utils/formatDate';\r\n\r\nconst ProfileExperience = ({\r\n  experience: { company, title, location, current, to, from, description }\r\n}) => (\r\n  <div>\r\n    <h3 className=\"text-dark\">{company}</h3>\r\n    <p>\r\n      {formatDate(from)} - {to ? formatDate(to) : 'Now'}\r\n    </p>\r\n    <p>\r\n      <strong>Position: </strong> {title}\r\n    </p>\r\n    <p>\r\n      <strong>Location: </strong> {location}\r\n    </p>\r\n    <p>\r\n      <strong>Description: </strong> {description}\r\n    </p>\r\n  </div>\r\n);\r\n\r\nProfileExperience.propTypes = {\r\n  experience: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProfileExperience;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport formatDate from '../utils/formatDate';\r\n\r\nconst ProfileEducation = ({\r\n  education: { school, degree, fieldofstudy, current, to, from, description }\r\n}) => (\r\n  <div>\r\n    <h3 className=\"text-dark\">{school}</h3>\r\n    <p>\r\n      {formatDate(from)} - {to ? formatDate(to) : 'Now'}\r\n    </p>\r\n    <p>\r\n      <strong>Degree: </strong> {degree}\r\n    </p>\r\n    <p>\r\n      <strong>Field Of Study: </strong> {fieldofstudy}\r\n    </p>\r\n    <p>\r\n      <strong>Description: </strong> {description}\r\n    </p>\r\n  </div>\r\n);\r\n\r\nProfileEducation.propTypes = {\r\n  education: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProfileEducation;\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getGithubRepos } from '../../actions/profile';\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n  useEffect(() => {\r\n    getGithubRepos(username);\r\n  }, [getGithubRepos, username]);\r\n\r\n  return (\r\n    <div className=\"profile-github\">\r\n      <h2 className=\"text-primary my-1\">Github Repos</h2>\r\n      {repos.map(repo => (\r\n        <div key={repo.id} className=\"repo bg-white p-1 my-1\">\r\n          <div>\r\n            <h4>\r\n              <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                {repo.name}\r\n              </a>\r\n            </h4>\r\n            <p>{repo.description}</p>\r\n          </div>\r\n          <div>\r\n            <ul>\r\n              <li className=\"badge badge-primary\">\r\n                Stars: {repo.stargazers_count}\r\n              </li>\r\n              <li className=\"badge badge-dark\">\r\n                Watchers: {repo.watchers_count}\r\n              </li>\r\n              <li className=\"badge badge-light\">Forks: {repo.forks_count}</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileGithub.propTypes = {\r\n  getGithubRepos: PropTypes.func.isRequired,\r\n  repos: PropTypes.array.isRequired,\r\n  username: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  repos: state.profile.repos\r\n});\r\n\r\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport ProfileTop from './ProfileTop';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileExperience from './ProfileExperience';\r\nimport ProfileEducation from './ProfileEducation';\r\nimport ProfileGithub from './ProfileGithub';\r\nimport { getProfileById } from '../../actions/profile';\r\n\r\nconst Profile = ({ getProfileById, profile: { profile }, auth, match }) => {\r\n  useEffect(() => {\r\n    getProfileById(match.params.id);\r\n  }, [getProfileById, match.params.id]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {profile === null ? (\r\n        <Spinner />) : (\r\n        <Fragment>\r\n          <Link to=\"/profiles\" className=\"btn btn-light\">\r\n            Back To Profile </Link>\r\n          {auth.isAuthenticated &&\r\n            auth.loading === false &&\r\n            auth.user._id === profile.user._id && (\r\n              <Link to=\"/edit-profile\" className=\"btn btn-dark\">\r\n                Edit Profile</Link>\r\n            )}\r\n          <div className=\"profile-grid my-1\">\r\n            <ProfileTop profile={profile} />\r\n            <ProfileAbout profile={profile} />\r\n            <div className=\"profile-exp bg-white p-2\">\r\n              <h2 className=\"text-primary\">Experience</h2>\r\n              {profile.experience.length > 0 ? (\r\n                <Fragment>\r\n                  {profile.experience.map((experience) => (\r\n                    <ProfileExperience\r\n                      key={experience._id}\r\n                      experience={experience} />\r\n                  ))}\r\n                </Fragment>\r\n              ) : (\r\n                <h4>No experience credentials</h4>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"profile-edu bg-white p-2\">\r\n              <h2 className=\"text-primary\">Education</h2>\r\n              {profile.education.length > 0 ? (\r\n                <Fragment>\r\n                  {profile.education.map((education) => (\r\n                    <ProfileEducation\r\n                      key={education._id}\r\n                      education={education}/>\r\n                  ))}\r\n                </Fragment>\r\n              ) : (\r\n                <h4>No education credentials</h4> )}\r\n            </div>\r\n            {profile.githubusername && (\r\n              <ProfileGithub username={profile.githubusername} />\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  getProfileById: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n  auth: state.auth\r\n});\r\nexport default connect(mapStateToProps, { getProfileById })(Profile);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport formatDate from '../utils/formatDate';\r\nimport { connect } from 'react-redux';\r\nimport { addLike, removeLike, deletePost } from '../../actions/post';\r\n\r\nconst PostItem = ({\r\n  addLike,\r\n  removeLike,\r\n  deletePost,\r\n  auth,\r\n  post: { _id, text, name, avatar, user, likes, comments, date },\r\n  showActions}) => (\r\n  <div className=\"post bg-white p-1 my-1\"><div>\r\n      <Link to={`/profile/${user}`}>\r\n        <img className=\"round-img\" src={avatar} alt=\"\" />\r\n        <h4>{name}</h4> </Link> </div>\r\n    <div>\r\n      <p className=\"my-1\">{text}</p>\r\n      <p className=\"post-date\">Posted on {formatDate(date)}</p>\r\n\r\n      {showActions && (\r\n        <Fragment>\r\n          <button\r\n            onClick={() => addLike(_id)}\r\n            type=\"button\"\r\n            className=\"btn btn-light\"  >\r\n            <i className=\"fas fa-thumbs-up\" />{' '}\r\n            <span>{likes.length > 0 && <span>{likes.length}</span>}</span>\r\n          </button>\r\n          <button\r\n            onClick={() => removeLike(_id)}\r\n            type=\"button\"\r\n            className=\"btn btn-light\" >\r\n            <i className=\"fas fa-thumbs-down\" />\r\n          </button>\r\n          <Link to={`/posts/${_id}`} className=\"btn btn-primary\">\r\n            Discussion{' '}\r\n            {comments.length > 0 && (\r\n              <span className=\"comment-count\">{comments.length}</span>  )}\r\n          </Link>\r\n          {!auth.loading && user === auth.user._id && (\r\n            <button\r\n              onClick={() => deletePost(_id)}\r\n              type=\"button\"\r\n              className=\"btn btn-danger\" >\r\n              <i className=\"fas fa-times\" />\r\n            </button>\r\n          )}\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nPostItem.defaultProps = {\r\n  showActions: true\r\n};\r\n\r\nPostItem.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  addLike: PropTypes.func.isRequired,\r\n  removeLike: PropTypes.func.isRequired,\r\n  deletePost: PropTypes.func.isRequired,\r\n  showActions: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\r\n  PostItem\r\n);\r\n","import api from '../components/utils/api';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_POST,\r\n  GET_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT\r\n} from './types';\r\nexport const getPosts = () => async dispatch => {\r\n  try {\r\n    const res = await api.get('/posts');\r\n    dispatch({\r\n      type: GET_POSTS,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }};\r\nexport const addLike = id => async dispatch => {\r\n  try {\r\n    const res = await api.put(`/posts/like/${id}`);\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id, likes: res.data }\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }};\r\nexport const removeLike = id => async dispatch => {\r\n  try {\r\n    const res = await api.put(`/posts/unlike/${id}`);\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id, likes: res.data }\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\nexport const deletePost = id => async dispatch => {\r\n  try {\r\n    await api.delete(`/posts/${id}`);\r\n    dispatch({\r\n      type: DELETE_POST,\r\n      payload: id\r\n    });\r\n    dispatch(setAlert('Post Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\nexport const addPost = formData => async dispatch => {\r\n  try {\r\n    const res = await api.post('/posts', formData);\r\n\r\n    dispatch({\r\n      type: ADD_POST,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Post Created', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\nexport const getPost = id => async dispatch => {\r\n  try {\r\n    const res = await api.get(`/posts/${id}`);\r\n\r\n    dispatch({\r\n      type: GET_POST,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\nexport const addComment = (postId, formData) => async dispatch => {\r\n  try {\r\n    const res = await api.post(`/posts/comment/${postId}`, formData);\r\n\r\n    dispatch({\r\n      type: ADD_COMMENT,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Comment Added', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\nexport const deleteComment = (postId, commentId) => async dispatch => {\r\n  try {\r\n    await api.delete(`/posts/comment/${postId}/${commentId}`);\r\n\r\n    dispatch({\r\n      type: REMOVE_COMMENT,\r\n      payload: commentId\r\n    });\r\n\r\n    dispatch(setAlert('Comment Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addPost } from '../../actions/post';\r\n\r\nconst PostForm = ({ addPost }) => {\r\n  const [text, setText] = useState('');\r\n\r\n  return (\r\n    <div className='post-form'>\r\n      <div className='bg-primary p'>\r\n        <h3>Say Something...</h3> </div>\r\n      <form className='form my-1'\r\n        onSubmit={e => { e.preventDefault();\r\n          addPost({ text });\r\n          setText('');\r\n        }}  >\r\n        <textarea\r\n          name='text'\r\n          cols='30'\r\n          rows='5'\r\n          placeholder='Create a post'\r\n          value={text}\r\n          onChange={e => setText(e.target.value)}\r\n          required />\r\n        <input type='submit' className='btn btn-dark my-1' value='Submit' />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nPostForm.propTypes = {addPost: PropTypes.func.isRequired\r\n};\r\nexport default connect(\r\n  null,\r\n  { addPost }\r\n)(PostForm);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport PostItem from './PostItem';\r\nimport PostForm from './PostForm';\r\nimport { getPosts } from '../../actions/post';\r\n\r\nconst Posts = ({ getPosts, post: { posts } }) => {\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, [getPosts]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Posts</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\" /> Welcome to the community </p>\r\n      <PostForm />\r\n      <div className=\"posts\">\r\n        {posts.map((post) => (\r\n          <PostItem key={post._id} post={post} />  ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPosts.propTypes = {\r\n  getPosts: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  post: state.post\r\n});\r\nexport default connect(mapStateToProps, { getPosts })(Posts);\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addComment } from '../../actions/post';\r\n\r\nconst CommentForm = ({ postId, addComment }) => {\r\n  const [text, setText] = useState('');\r\n\r\n  return (\r\n    <div className='post-form'>\r\n      <div className='bg-primary p'>\r\n        <h3>Leave a Comment</h3>\r\n      </div>\r\n      <form\r\n        className='form my-1'\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          addComment(postId, { text });\r\n          setText('');\r\n        }}>\r\n        <textarea\r\n          name='text'\r\n          cols='30'\r\n          rows='5'\r\n          placeholder='Comment the post'\r\n          value={text}\r\n          onChange={e => setText(e.target.value)}\r\n          required />\r\n        <input type='submit' className='btn btn-dark my-1' value='Submit' />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n  addComment: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { addComment }\r\n)(CommentForm);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport formatDate from '../utils/formatDate';\r\nimport { deleteComment } from '../../actions/post';\r\n\r\nconst CommentItem = ({\r\n  postId,\r\n  comment: { _id, text, name, avatar, user, date },\r\n  auth,\r\n  deleteComment\r\n}) => (\r\n  <div className=\"post bg-white p-1 my-1\">\r\n    <div>\r\n      <Link to={`/profile/${user}`}>\r\n        <img className=\"round-img\" src={avatar} alt=\"\" />\r\n        <h4>{name}</h4>\r\n      </Link>\r\n    </div>\r\n    <div>\r\n      <p className=\"my-1\">{text}</p>\r\n      <p className=\"post-date\">Posted on {formatDate(date)}</p>\r\n      {!auth.loading && user === auth.user._id && (\r\n        <button\r\n          onClick={() => deleteComment(postId, _id)}\r\n          type=\"button\"\r\n          className=\"btn btn-danger\" >\r\n          <i className=\"fas fa-times\" />\r\n        </button>\r\n      )}\r\n    </div></div>\r\n);\r\nCommentItem.propTypes = {\r\n  postId: PropTypes.string.isRequired,\r\n  comment: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  deleteComment: PropTypes.func.isRequired\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth\r\n});\r\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport PostItem from '../posts/PostItem';\r\nimport CommentForm from '../post/CommentForm';\r\nimport CommentItem from '../post/CommentItem';\r\nimport { getPost } from '../../actions/post';\r\n\r\nconst Post = ({ getPost, post: { post, loading }, match }) => {\r\n  useEffect(() => {\r\n    getPost(match.params.id);}, [getPost, match.params.id]);\r\n\r\n  return loading || post === null ? (\r\n    <Spinner /> ) : (<Fragment>\r\n      <Link to=\"/posts\" className=\"btn\">\r\n        Back To Posts</Link>\r\n      <PostItem post={post} showActions={false} />\r\n      <CommentForm postId={post._id} />\r\n      <div className=\"comments\">\r\n        {post.comments.map((comment) => (\r\n          <CommentItem key={comment._id} comment={comment} postId={post._id} /> ))}\r\n      </div> </Fragment>\r\n  );\r\n};\r\nPost.propTypes = {\r\n  getPost: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  post: state.post\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPost })(Post);\r\n","import React, { Fragment } from 'react';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <Fragment>\r\n      <h1 className='x-large text-primary'>\r\n        <i className='fas fa-exclamation-triangle' /> Page Not Found\r\n      </h1>\r\n      <p className='large'>Sorry, this page does not exist</p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  auth: { isAuthenticated, loading },\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      loading ? (\r\n        <Spinner />\r\n      ) : isAuthenticated ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    } />\r\n);\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Register from '../auth/Register';\r\nimport Login from '../auth/Login';\r\nimport Alert from '../layout/Alert';\r\nimport Dashboard from '../dashboard/Dashboard';\r\nimport ProfileForm from '../profile-forms/ProfileForm';\r\nimport AddExperience from '../profile-forms/AddExperience';\r\nimport AddEducation from '../profile-forms/AddEducation';\r\nimport Profiles from '../profiles/Profiles';\r\nimport Profile from '../profile/Profile';\r\nimport Posts from '../posts/Posts';\r\nimport Post from '../post/Post';\r\nimport NotFound from '../layout/NotFound';\r\nimport PrivateRoute from '../routing/PrivateRoute';\r\n\r\nconst Routes = props => {\r\n  return (\r\n    <section className=\"container\">\r\n      <Alert />\r\n      <Switch>\r\n        <Route exact path=\"/register\" component={Register} />\r\n        <Route exact path=\"/login\" component={Login} />\r\n        <Route exact path=\"/profiles\" component={Profiles} />\r\n        <Route exact path=\"/profile/:id\" component={Profile} />\r\n        <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n        <PrivateRoute exact path=\"/create-profile\" component={ProfileForm} />\r\n        <PrivateRoute exact path=\"/edit-profile\" component={ProfileForm} />\r\n        <PrivateRoute exact path=\"/add-experience\" component={AddExperience} />\r\n        <PrivateRoute exact path=\"/add-education\" component={AddEducation} />\r\n        <PrivateRoute exact path=\"/posts\" component={Posts} />\r\n        <PrivateRoute exact path=\"/posts/:id\" component={Post} />\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport Routes from './components/routing/Routes';\nimport { LOGOUT } from './actions/types';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './components/utils/setAuthToken';\nimport './App.css';\n\nconst App = () => {\n  useEffect(() => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n    store.dispatch(loadUser());\n    window.addEventListener('storage', () => {\n      if (!localStorage.token) store.dispatch({ type: LOGOUT });\n    });\n  }, []);\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Landing} />\n            <Route component={Routes} />\n          </Switch>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}